library(thierrytools)
install.packages(c("cowplot", "fitdistrplus", "ggrepel", "gh", "Hmisc", "ifultools", "lme4", "pbkrtest", "RcppEigen", "rmarkdown", "segmented", "seqinr", "tinytex", "usethis", "vegan"))
devtools::install_github("thierroll/thierrytools")
library(devtools)
library(uesthis)
install.packages("usethis")
install.packages("usethis")
devtools::install_github("thierroll/thierrytools")
# setwd("/run/user/1000/gvfs/smb-share:server=skimcs,share=castoricenter/Thierry/benchmark_single/dada")
# system("process_pool_dada2.py ../Sample_ITS2_IGO_11331_9 -noask")  #to be dada2 processed (nsamps=4)
library(dada2)
library(phyloseq)
library(Biostrings)
library(yingtools2)
library(dplyr)
library(thierrytools)
library(stringr)
library(tidyr)
# ## read in seqtabs
seqtab_files <- c("../Sample_Normal_1_IGO_11331_1/seqtab.rds",
"../Sample_Normal_2_IGO_11331_2/seqtab.rds",
"../Sample_Normal_3_IGO_11331_3/seqtab.rds",
"../Sample_Normal_4_IGO_11331_4/seqtab.rds",
"../Sample_Wobble_1_IGO_11331_5/seqtab.rds",
"../Sample_Wobble_4_IGO_11331_8/seqtab.rds")
if (any(!file.exists(seqtab_files))) {
stop("YTError: not all ASV tables (seqtab.rds) were found:", paste(seqtab_files[!file.exists(seqtab_files)],collapse=","))
}
seqtab_list <- lapply(seqtab_files,readRDS)
#
# ## for non-bacterial seqs, skip the size filter:
seqtab_list_normlength <- seqtab_list
#
#
## remove tables with zero columns (could occur either in pool processing or length filtering step above)
nocols <- sapply(seqtab_list_normlength,function(x) ncol(x)==0)
seqtab_list_final <- seqtab_list_normlength[!nocols]
## merge seqtabs together and create phyloseq object
seqtab <- do.call(mergeSequenceTables,seqtab_list_final)
otu <- otu_table(t(seqtab),taxa_are_rows=TRUE)
dna <- DNAStringSet(getSequences(seqtab))
names(dna) <- dna
phy.dada2 <- phyloseq(otu,dna)
taxa_names(phy.dada2) <- paste0("ASV_",seq_along(taxa_names(phy.dada2)),";seqs=",taxa_sums(phy.dada2),";samples=",apply(otu,2,function(x) sum(x>0)))
setwd("/run/user/1000/gvfs/smb-share:server=skimcs,share=castoricenter/Thierry/benchmark_single/dada")
# system("process_pool_dada2.py ../Sample_ITS2_IGO_11331_9 -noask")  #to be dada2 processed (nsamps=4)
library(dada2)
library(phyloseq)
library(Biostrings)
library(yingtools2)
library(dplyr)
library(thierrytools)
library(stringr)
library(tidyr)
# ## read in seqtabs
seqtab_files <- c("../Sample_Normal_1_IGO_11331_1/seqtab.rds",
"../Sample_Normal_2_IGO_11331_2/seqtab.rds",
"../Sample_Normal_3_IGO_11331_3/seqtab.rds",
"../Sample_Normal_4_IGO_11331_4/seqtab.rds",
"../Sample_Wobble_1_IGO_11331_5/seqtab.rds",
"../Sample_Wobble_4_IGO_11331_8/seqtab.rds")
if (any(!file.exists(seqtab_files))) {
stop("YTError: not all ASV tables (seqtab.rds) were found:", paste(seqtab_files[!file.exists(seqtab_files)],collapse=","))
}
seqtab_list <- lapply(seqtab_files,readRDS)
#
# ## for non-bacterial seqs, skip the size filter:
seqtab_list_normlength <- seqtab_list
#
#
## remove tables with zero columns (could occur either in pool processing or length filtering step above)
nocols <- sapply(seqtab_list_normlength,function(x) ncol(x)==0)
seqtab_list_final <- seqtab_list_normlength[!nocols]
## merge seqtabs together and create phyloseq object
seqtab <- do.call(mergeSequenceTables,seqtab_list_final)
otu <- otu_table(t(seqtab),taxa_are_rows=TRUE)
dna <- DNAStringSet(getSequences(seqtab))
names(dna) <- dna
phy.dada2 <- phyloseq(otu,dna)
taxa_names(phy.dada2) <- paste0("ASV_",seq_along(taxa_names(phy.dada2)),";seqs=",taxa_sums(phy.dada2),";samples=",apply(otu,2,function(x) sum(x>0)))
## blast classification
tax_blast <- read.blastn.unite("asv_seqs.fasta.blastn.unite.txt")
library(thierrytools)
tax_blast <- read.blastn.unite("asv_seqs.fasta.blastn.unite.txt")
devtools::install_github("thierroll/thierrytools")
parapsilosis1 <- grepl("parapsilosis|orthopsilosis|metapsilosis",tax.dict$Species)
